{"version":3,"sources":["components/JsonFetch.js","hooks/useJsonFetch.js","App.js","reportWebVitals.js","index.js"],"names":["JsonFetch","url","opts","useState","data","setData","loading","setLoading","error","setError","useEffect","fetchData","a","fetch","response","ok","Error","statusText","json","useJsonFetch","style","color","Object","keys","values","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAEe,SAASA,EAAT,GAA2B,IACxC,ECDa,SAAsBC,EAAKC,GAExC,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAsBA,OApBAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,8BAAAC,EAAA,6DAChBL,GAAW,GADK,kBAGSM,MAAMZ,EAAKC,GAHpB,WAGRY,EAHQ,QAIAC,GAJA,sBAKN,IAAIC,MAAMF,EAASG,YALb,uBAOKH,EAASI,OAPd,OAORd,EAPQ,OAQdC,EAAQD,GACRK,EAAS,MATK,kDAWdA,EAAS,EAAD,IAXM,yBAadF,GAAW,GAbG,6EAAH,qDAgBfI,MACC,IAEG,CAAC,CAACP,OAAME,UAASE,UDzBUW,CADM,EAANlB,IACkB,IAAnD,sBAAQG,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASE,EAAvB,EAAuBA,MAEvB,OACE,qCACGF,GAAW,sBAAMc,MAAO,CAACC,MAAM,UAApB,iEACXjB,GAAQ,uGAAuB,uBAAMgB,MAAO,CAACC,MAAM,SAApB,UAA+BC,OAAOC,KAAKnB,GAA3C,KAAoDkB,OAAOE,OAAOpB,SACjGI,GAAS,sBAAMY,MAAO,CAACC,MAAO,OAArB,uJEIDI,MAVf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,kEAAoC,cAAC1B,EAAD,CAAWC,IAAI,kCACnD,mEAAqC,cAACD,EAAD,CAAWC,IAAI,mCACpD,qEAAuC,cAACD,EAAD,CAAWC,IAAI,yCCI7C0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fffeb8c4.chunk.js","sourcesContent":["import useJsonFetch from '../hooks/useJsonFetch';\r\n\r\nexport default function JsonFetch({url}) {\r\n  const [{data, loading, error}] = useJsonFetch(url, []);\r\n\r\n  return (\r\n    <>\r\n      {loading && <span style={{color:'orange'}}>Загрузка...</span>}\r\n      {data && <span>Содержимое data: <span style={{color:'green'}}>{Object.keys(data)}: {Object.values(data)}</span></span>}\r\n      {error && <span style={{color: 'red'}}>Ошибка загрузки страницы</span>}\r\n    </>\r\n  )\r\n}","import {useState, useEffect} from 'react';\r\n\r\nexport default function useJsonFetch(url, opts) {\r\n\r\n  const [data, setData] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(url, opts);\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        const data = await response.json();\r\n        setData(data);\r\n        setError(null);\r\n      } catch (e) {\r\n        setError(e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  return[{data, loading, error}];\r\n}","import './App.css';\nimport JsonFetch from './components/JsonFetch';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <p>GET http://localhost:7070/data - <JsonFetch url=\"http://localhost:7070/data\" /></p>\n      <p>GET http://localhost:7070/error - <JsonFetch url=\"http://localhost:7070/error\" /></p>\n      <p>GET http://localhost:7070/loading - <JsonFetch url=\"http://localhost:7070/loading\" /></p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}